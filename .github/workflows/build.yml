# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: build
on:
  push:
    branches:
      - "**"
    tags:
      - "**"
  pull_request:
  workflow_dispatch:

permissions: {}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      toolchain-version: ${{ steps.bootstrap.outputs.toolchain-version }}
      toolchain-checksum: ${{ steps.bootstrap.outputs.toolchain-checksum }}
      toolchain-artifact-name: ${{ steps.bootstrap.outputs.toolchain-artifact-name }}
      toolchain-artifact-sha256-name: ${{ steps.bootstrap.outputs.toolchain-artifact-sha256-name }}
      toolchain-artifact-provenance-name: ${{ format('{0}.slsa.json', steps.bootstrap.outputs.toolchain-artifact-name) }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          persist-credentials: false
          submodules: true

      - name: Bootstrap
        id: bootstrap
        run: ./bootstrap.sh --build --clean

      - name: Upload Toolchain
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # ratchet:actions/upload-artifact@v4
        with:
          name: ${{ steps.bootstrap.outputs.toolchain-artifact-name }}
          path: dist/${{ steps.bootstrap.outputs.toolchain-artifact-name }}
          if-no-files-found: error

      - name: Upload SHA256 checksum file
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # ratchet:actions/upload-artifact@v4
        with:
          name: ${{ steps.bootstrap.outputs.toolchain-artifact-sha256-name }}
          path: dist/${{ steps.bootstrap.outputs.toolchain-artifact-sha256-name }}
          if-no-files-found: error

  provenance:
    if: "${{ github.ref_type == 'tag' || (github.event_name == 'push' && github.ref_name == github.event.repository.default_branch) }}"
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
      id-token: write
      attestations: write
    steps:
      - name: Generate SLSA Provenance
        id: provenance
        uses: actions/attest-build-provenance@520d128f165991a6c774bcb264f323e3d70747f4 # ratchet:actions/attest-build-provenance@v2
        with:
          subject-name: ${{ needs.build.outputs.toolchain-artifact-name }}
          subject-digest: ${{ format('sha256:{0}', needs.build.outputs.toolchain-checksum) }}

      - name: Rename provenance file
        run: mv ${{ steps.provenance.outputs.bundle-path }} ${{ needs.build.outputs.toolchain-artifact-provenance-name }}

      - name: Upload provenance bundle
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # ratchet:actions/upload-artifact@v4
        with:
          name: ${{ needs.build.outputs.toolchain-artifact-provenance-name }}
          path: ${{ needs.build.outputs.toolchain-artifact-provenance-name }}
          if-no-files-found: error

  release:
    if: "${{ github.ref_type == 'tag' || (github.event_name == 'push' && github.ref_name == github.event.repository.default_branch) }}"
    runs-on: ubuntu-latest
    needs:
      - build
      - provenance
    permissions:
      attestations: read
      contents: write
      id-token: none
    steps:
      - name: Download Artifacts
        id: toolchain
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # ratchet:actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: List Artifacts
        run: ls -Al dist

      # Using gh (which is written in go) is okay here as it is executed after building the
      # go toolchain and signing SLSA provenance in previous jobs and has no access to OIDC
      # tokens which are required to mint sigstore certificates.
      - name: Create a Release
        if: ${{ github.ref_type == 'tag' }}
        id: release
        run: >-
          gh release create
          --repo ${{ github.repository }}
          --title "Go Bootstrap Toolchain ${{ needs.build.outputs.toolchain-version }}"
          ${{ github.ref_name }}
          dist/${{ needs.build.outputs.toolchain-artifact-name }}
          dist/${{ needs.build.outputs.toolchain-artifact-sha256-name }}
          dist/${{ needs.build.outputs.toolchain-artifact-provenance-name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
